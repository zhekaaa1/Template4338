<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MmsCore.Extensions</name>
    </assembly>
    <members>
        <member name="T:MmsCore.Extensions.DateTimeExtensions">
            <summary>
            <see cref="T:System.DateTime" /> 構造体の拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:MmsCore.Extensions.DateTimeExtensions.ToNextDay(System.Nullable{System.DateTime})">
            <summary>
            指定された <see cref="T:System.DateTime" /> の翌日へ変換します。
            </summary>
            <param name="dateTime">変換元の  <see cref="T:System.DateTime" />。</param>
            <returns>指定された <see cref="T:System.DateTime" /> の翌日。</returns>
        </member>
        <member name="M:MmsCore.Extensions.DateTimeExtensions.ToNextDay(System.DateTime)">
            <summary>
            指定された <see cref="T:System.DateTime" /> の翌日へ変換します。
            </summary>
            <param name="dateTime">変換元の  <see cref="T:System.DateTime" />。</param>
            <returns>指定された <see cref="T:System.DateTime" /> の翌日。</returns>
        </member>
        <member name="M:MmsCore.Extensions.DateTimeExtensions.ToNextMinute(System.Nullable{System.DateTime})">
            <summary>
            指定された <see cref="T:System.DateTime" /> の翌分へ変換します。
            </summary>
            <param name="dateTime">変換元の  <see cref="T:System.DateTime" />。</param>
            <returns>指定された <see cref="T:System.DateTime" /> の翌分。</returns>
        </member>
        <member name="M:MmsCore.Extensions.DateTimeExtensions.ToNextMinute(System.DateTime)">
            <summary>
            指定された <see cref="T:System.DateTime" /> の翌分へ変換します。
            </summary>
            <param name="dateTime">変換元の  <see cref="T:System.DateTime" />。</param>
            <returns>指定された <see cref="T:System.DateTime" /> の翌分。</returns>
        </member>
        <member name="M:MmsCore.Extensions.DateTimeExtensions.ToFirstDayInMonth(System.DateTime)">
            <summary>
            指定された <see cref="T:System.DateTime" /> から当月 1 日の日付に変換します。
            </summary>
            <param name="dateTime">変換元の  <see cref="T:System.DateTime" />。</param>
            <returns>指定された <see cref="T:System.DateTime" /> の当月 1 日の日付。</returns>
        </member>
        <member name="M:MmsCore.Extensions.DateTimeExtensions.ToLastDayInMonth(System.DateTime)">
            <summary>
            指定された <see cref="T:System.DateTime" /> から当月末日の日付に変換します。
            </summary>
            <param name="dateTime">変換元の  <see cref="T:System.DateTime" />。</param>
            <returns>指定された <see cref="T:System.DateTime" /> の当月末日の日付。</returns>
        </member>
        <member name="M:MmsCore.Extensions.DateTimeExtensions.ToExceptedMilliseconds(System.DateTime)">
            <summary>
            ミリ秒を除外した (0 ミリ秒とした) 日時に変換します。
            </summary>
            <param name="dateTime">対象の日時。</param>
            <returns>ミリ秒を除外した日時。</returns>
        </member>
        <member name="M:MmsCore.Extensions.DateTimeExtensions.ToExceptedSeconds(System.DateTime)">
            <summary>
            秒を除外した (0 秒 0 ミリ秒とした) 日時に変換します。
            </summary>
            <param name="dateTime">対象の日時。</param>
            <returns>秒を除外した日時。</returns>
        </member>
        <member name="T:MmsCore.Extensions.EnumerableExtensions">
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> インターフェイスの拡張メソッドを提供します。
            </summary>
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> インターフェイスの拡張メソッドを提供します。
            </summary>
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> インターフェイスの拡張メソッドを提供します。
            </summary>
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> インターフェイスの拡張メソッドを提供します。
            </summary>
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> インターフェイスの拡張メソッドを提供します。
            </summary>
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> インターフェイスの拡張メソッドを提供します。
            </summary>
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> インターフェイスの拡張メソッドを提供します。
            </summary>
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> インターフェイスの拡張メソッドを提供します。
            </summary>
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> インターフェイスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            シーケンスから一意の要素を返します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
            <typeparam name="TKey">キーの型。</typeparam>
            <param name="source">指定のコレクション。</param>
            <param name="keySelector">コレクションの各要素からキーを取得するメソッドのデリゲート。</param>
            <returns>シーケンスの一意の要素を格納する IEnumerable{T}。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.EmptyIfNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            安全な列挙を取得します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
            <param name="source">指定のコレクション。</param>
            <returns>指定のコレクションが null の場合、要素数 0。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.ExceptBy``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            指定された IEqualityComparer{T} を使用して値を比較することにより、2 つのシーケンスの差集合を生成します。
            </summary>
            <typeparam name="TSource">入力シーケンスの要素の型。</typeparam>
            <typeparam name="TKey">シーケンス要素から取得されるキーの型。</typeparam>
            <param name="first">second には含まれていないが、返される要素を含む IEnumerable{TSource}。</param>
            <param name="second">最初のシーケンスにも含まれ、返されたシーケンスからは削除される要素を含む IEnumerable{TSource}。</param>
            <param name="keySelector">シーケンスの各要素から比較キーを抽出するメソッドのデリゲート。</param>
            <returns>2 つのシーケンスの要素の差集合が格納されているシーケンス。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.ExceptBy``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            指定された IEqualityComparer{T} を使用して値を比較することにより、2 つのシーケンスの差集合を生成します。
            </summary>
            <typeparam name="TSource">入力シーケンスの要素の型。</typeparam>
            <typeparam name="TKey">シーケンス要素から取得されるキーの型。</typeparam>
            <param name="first">second には含まれていないが、返される要素を含む IEnumerable{TSource}。</param>
            <param name="second">最初のシーケンスにも含まれ、返されたシーケンスからは削除される要素を含む IEnumerable{TSource}。</param>
            <param name="keySelector">シーケンスの各要素から比較キーを抽出するメソッドのデリゲート。</param>
            <param name="keyComparer">値を比較する IEqualityComparer{TKey}。</param>
            <returns>2 つのシーケンスの要素の差集合が格納されているシーケンス。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.ExceptByInternal``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            指定された IEqualityComparer{T} を使用して値を比較することにより、2 つのシーケンスの差集合を生成します。
            </summary>
            <typeparam name="TSource">入力シーケンスの要素の型。</typeparam>
            <typeparam name="TKey">シーケンス要素から取得されるキーの型。</typeparam>
            <param name="first">second には含まれていないが、返される要素を含む IEnumerable{TSource}。</param>
            <param name="second">最初のシーケンスにも含まれ、返されたシーケンスからは削除される要素を含む IEnumerable{TSource}。</param>
            <param name="keySelector">シーケンスの各要素から比較キーを抽出するメソッドのデリゲート。</param>
            <param name="keyComparer">値を比較する IEqualityComparer{TKey}。</param>
            <returns>2 つのシーケンスの要素の差集合が格納されているシーケンス。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            指定されたコレクション内の各要素に対して指定された処理を実行します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
            <param name="source">指定のコレクション。</param>
            <param name="action">コレクションの各要素に対して実行する Action&lt;T&gt; デリゲート。</param>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>
            指定されたコレクション内の各要素に対して指定された処理を実行します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
            <param name="source">指定のコレクション。</param>
            <param name="action">コレクションの各要素に対して実行する Action&lt;T, int&gt; デリゲート。</param>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.ForEachAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.ValueTask})">
            <summary>
            非同期操作として、指定されたコレクション内の各要素に対して指定された処理を実行します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
            <param name="source">指定のコレクション。</param>
            <param name="action">コレクションの各要素に対して非同期操作として実行する Func&lt;T, ValueTask&gt; デリゲート。</param>
            <returns>完了を表す <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.ForEachAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Threading.Tasks.ValueTask})">
            <summary>
            非同期操作として、指定されたコレクション内の各要素に対して指定された処理を実行します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
            <param name="source">指定のコレクション。</param>
            <param name="action">コレクションの各要素に対して非同期操作として実行する Func&lt;T, int, ValueTask&gt; デリゲート。</param>
            <returns>完了を表す <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.LeftOuterJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},``1,System.Collections.Generic.IEqualityComparer{``2})">
            <summary>
            キーが等しいかどうかに基づいて 2 つのシーケンスの要素を相互に関連付け、その結果を左外部結合としてグループ化します。指定された IEqualityComparer{TKey} を使用してキーを比較します。
            <para>左外部結合は 2 番目のコレクションに相関関係を持つ要素があるかどうかに関係なく最初のコレクションの各要素が返される結合です。</para>
            </summary>
            <typeparam name="TOuter">最初のシーケンスの要素の型。</typeparam>
            <typeparam name="TInner">2 番目のシーケンスの要素の型。</typeparam>
            <typeparam name="TKey">キーセレクター関数によって返されるキーの型。</typeparam>
            <typeparam name="TResult">結果の要素の型。</typeparam>
            <param name="outer">結合する最初のシーケンス。</param>
            <param name="inner">最初のシーケンスに結合するシーケンス。</param>
            <param name="outerKeySelector">最初のシーケンスの各要素から結合キーを抽出する関数。</param>
            <param name="innerKeySelector">2 番目のシーケンスの各要素から結合キーを抽出する関数。</param>
            <param name="resultSelector">2 つの要素から結果の要素を作成する関数。</param>
            <param name="innerDefaultValue">2 番目のシーケンスが空の場合に返す値。</param>
            <param name="comparer">キーをハッシュして比較する IEqualityComparer{TKey}。</param>
            <returns>2 つのシーケンスに対して左外部結合を実行して取得する、TResult 型の要素が格納されている IEnumerable{TResult}。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.FullOuterJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``2,``0,``1,``3},``0,``1,System.Collections.Generic.IEqualityComparer{``2})">
            <summary>
            キーが等しいかどうかに基づいて 2 つのシーケンスの要素を相互に関連付け、その結果を外部結合としてグループ化します。指定された IEqualityComparer{TKey} を使用してキーを比較します。
            </summary>
            <typeparam name="TLeft">最初のシーケンスの要素の型。</typeparam>
            <typeparam name="TRight">2 番目のシーケンスの要素の型。</typeparam>
            <typeparam name="TKey">キーセレクター関数によって返されるキーの型。</typeparam>
            <typeparam name="TResult">結果の要素の型。</typeparam>
            <param name="left">結合する最初のシーケンス。</param>
            <param name="right">最初のシーケンスに結合するシーケンス。</param>
            <param name="leftKeySelector">最初のシーケンスの各要素から結合キーを抽出する関数。</param>
            <param name="rightKeySelector">2 番目のシーケンスの各要素から結合キーを抽出する関数。</param>
            <param name="resultSelector">2 つの要素から結果の要素を作成する関数。</param>
            <param name="defaultLeft">最初のシーケンスが空の場合に返す値。</param>
            <param name="defaultRight">2 番目のシーケンスが空の場合に返す値。</param>
            <param name="comparer">キーをハッシュして比較する IEqualityComparer{TKey}。</param>
            <returns>2 つのシーケンスに対して外部結合を実行して取得する、TResult 型の要素が格納されている IEnumerable{TResult}。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.FullOuterJoinIterator``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``2,``0,``1,``3},``0,``1,System.Collections.Generic.IEqualityComparer{``2})">
            <summary>
            キーが等しいかどうかに基づいて 2 つのシーケンスの要素を相互に関連付け、その結果を外部結合としてグループ化します。指定された IEqualityComparer{TKey} を使用してキーを比較します。
            </summary>
            <typeparam name="TLeft">最初のシーケンスの要素の型。</typeparam>
            <typeparam name="TRight">2 番目のシーケンスの要素の型。</typeparam>
            <typeparam name="TKey">キーセレクター関数によって返されるキーの型。</typeparam>
            <typeparam name="TResult">結果の要素の型。</typeparam>
            <param name="left">結合する最初のシーケンス。</param>
            <param name="right">最初のシーケンスに結合するシーケンス。</param>
            <param name="leftKeySelector">最初のシーケンスの各要素から結合キーを抽出する関数。</param>
            <param name="rightKeySelector">2 番目のシーケンスの各要素から結合キーを抽出する関数。</param>
            <param name="resultSelector">2 つの要素から結果の要素を作成する関数。</param>
            <param name="defaultLeft">最初のシーケンスが空の場合に返す値。</param>
            <param name="defaultRight">2 番目のシーケンスが空の場合に返す値。</param>
            <param name="comparer">キーをハッシュして比較する IEqualityComparer{TKey}。</param>
            <returns>2 つのシーケンスに対して外部結合を実行して取得する、TResult 型の要素が格納されている IEnumerable{TResult}。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.SequenceIsContiguous``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            指定された要素のコレクションが、元のコレクション内で連続しているかを判定します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
            <param name="self">元のコレクション。</param>
            <param name="sequenceToCheck">チェックする要素のコレクション。</param>
            <returns>指定された要素が連続している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.SequenceIsContiguous``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            指定された要素のコレクションが、元のコレクション内で連続しているかを判定します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
            <typeparam name="TKey">要素から取得されるキーの型。</typeparam>
            <param name="self">元のコレクション。</param>
            <param name="sequenceToCheck">チェックする要素のコレクション。</param>
            <param name="keySelector">シーケンスの各要素から比較キーを抽出するメソッドのデリゲート。</param>
            <param name="keyComparer">値を比較する IEqualityComparer{TKey}。</param>
            <returns>指定された要素が連続している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.SequenceIsContiguousCore``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            指定された要素のコレクションが、元のコレクション内で連続しているかを判定します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
            <typeparam name="TKey">要素から取得されるキーの型。</typeparam>
            <param name="self">元のコレクション。</param>
            <param name="sequenceToCheck">チェックする要素のコレクション。</param>
            <param name="keySelector">シーケンスの各要素から比較キーを抽出するメソッドのデリゲート。</param>
            <param name="keyComparer">値を比較する IEqualityComparer{TKey}。</param>
            <returns>指定された要素が連続している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.ToReadOnly``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            指定されたコレクションを読み取り専用のコレクションへ変換します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
            <param name="source">要素のコレクション。</param>
            <returns>読み取り専用の要素のコレクション。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.WithIndex``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            要素のインデックスを組み込んだシーケンスの各要素を取得します。
            </summary>
            <typeparam name="TSource">要素の型。</typeparam>
            <param name="source">変換関数を呼び出す対象となる値のシーケンス。</param>
            <returns><see cref="T:MmsCore.Extensions.IIndexedItem`1" /> 要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.WithoutIndex``1(System.Collections.Generic.IEnumerable{MmsCore.Extensions.IIndexedItem{``0}})">
            <summary>
            要素に組み込んだインデックスを除外した各要素を取得します。
            </summary>
            <typeparam name="TSource">要素の型。</typeparam>
            <param name="source"><see cref="T:MmsCore.Extensions.IIndexedItem`1" /> を含む要素のシーケンス。</param>
            <returns><see cref="T:MmsCore.Extensions.IIndexedItem`1" /> 要素を含む <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
        </member>
        <member name="T:MmsCore.Extensions.EnumerableExtensions.IndexedItem`1">
            <summary>
            シーケンスのインデックスを付与した要素を表します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
        </member>
        <member name="M:MmsCore.Extensions.EnumerableExtensions.IndexedItem`1.#ctor(System.Int32,`0)">
            <summary>
            <see cref="T:MmsCore.Extensions.EnumerableExtensions.IndexedItem`1" /> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="index">シーケンスのインデックス。</param>
            <param name="item">要素。</param>
        </member>
        <member name="P:MmsCore.Extensions.EnumerableExtensions.IndexedItem`1.Index">
            <summary>
            シーケンスのインデックスを取得します。
            </summary>
            <value>
            値を表す <see cref="T:System.Int32" /> 型。
            <para>シーケンスのインデックス。既定値は 0 です。</para>
            </value>
        </member>
        <member name="P:MmsCore.Extensions.EnumerableExtensions.IndexedItem`1.Item">
            <summary>
            要素を取得します。
            </summary>
            <value>
            値を表す T 型。
            <para>要素。既定値は default(T) です。</para>
            </value>
        </member>
        <member name="T:MmsCore.Extensions.IIndexedItem`1">
            <summary>
            シーケンスのインデックスを付与した要素のインターフェイスを表します。
            </summary>
            <typeparam name="T">要素の型。</typeparam>
        </member>
        <member name="P:MmsCore.Extensions.IIndexedItem`1.Index">
            <summary>
            シーケンスのインデックスを取得します。
            </summary>
            <value>
            値を表す <see cref="T:System.Int32" /> 型。
            <para>シーケンスのインデックス。既定値は 0 です。</para>
            </value>
        </member>
        <member name="P:MmsCore.Extensions.IIndexedItem`1.Item">
            <summary>
            要素を取得します。
            </summary>
            <value>
            値を表す T 型。
            <para>要素。既定値は default(T) です。</para>
            </value>
        </member>
        <member name="T:MmsCore.Extensions.ObservableCollectionExtensions">
            <summary>
            <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> クラスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:MmsCore.Extensions.ObservableCollectionExtensions.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            指定されたコレクションを <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> へ変換します。
            </summary>
            <typeparam name="T">コレクション要素の型。</typeparam>
            <param name="source">変換元のコレクション。</param>
            <returns>変換された <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />。</returns>
        </member>
        <member name="M:MmsCore.Extensions.ObservableCollectionExtensions.MoveToDown``1(System.Collections.ObjectModel.ObservableCollection{``0},``0,System.Predicate{``0},System.Action{``0,``0})">
            <summary>
            指定された要素をコレクション内の現在の場所の 1 つ下へ移動します。
            </summary>
            <typeparam name="T">コレクション要素の型。</typeparam>
            <param name="self"><see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> コレクション。</param>
            <param name="itemToMove">新しい場所へ移動する要素。</param>
            <param name="predicate">コレクション要素が移動可能かどうかを判定するデリゲート。</param>
            <param name="modifyMovedItems">移動した各要素に対して追加で更新するメソッドのデリゲートデリゲート。</param>
        </member>
        <member name="M:MmsCore.Extensions.ObservableCollectionExtensions.MoveToUp``1(System.Collections.ObjectModel.ObservableCollection{``0},``0,System.Predicate{``0},System.Action{``0,``0})">
            <summary>
            指定された要素をコレクション内の現在の場所の 1 つ上へ移動します。
            </summary>
            <typeparam name="T">コレクション要素の型。</typeparam>
            <param name="self"><see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> コレクション。</param>
            <param name="itemToMove">新しい場所へ移動する要素。</param>
            <param name="predicate">コレクション要素が移動可能かどうかを判定するデリゲート。</param>
            <param name="modifyMovedItems">移動した各要素に対して追加で更新するメソッドのデリゲートデリゲート。</param>
        </member>
        <member name="M:MmsCore.Extensions.ObservableCollectionExtensions.MoveToDown``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Action{``0,``0})">
            <summary>
            指定された要素をコレクション内の現在の場所の 1 つ下へ移動します。
            </summary>
            <typeparam name="T">コレクション要素の型。</typeparam>
            <param name="self"><see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> コレクション。</param>
            <param name="itemsToMove">新しい場所へ移動する要素のコレクション。</param>
            <param name="predicate">コレクション要素が移動可能かどうかを判定するデリゲート。</param>
            <param name="modifyMovedItems">移動した各要素に対して追加で更新するメソッドのデリゲートデリゲート。</param>
        </member>
        <member name="M:MmsCore.Extensions.ObservableCollectionExtensions.MoveToUp``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Action{``0,``0})">
            <summary>
            指定された要素をコレクション内の現在の場所の 1 つ上へ移動します。
            </summary>
            <typeparam name="T">コレクション要素の型。</typeparam>
            <param name="self"><see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> コレクション。</param>
            <param name="itemsToMove">新しい場所へ移動する要素のコレクション。</param>
            <param name="predicate">コレクション要素が移動可能かどうかを判定するデリゲート。</param>
            <param name="modifyMovedItems">移動した各要素に対して追加で更新するメソッドのデリゲートデリゲート。</param>
        </member>
        <member name="M:MmsCore.Extensions.ObservableCollectionExtensions.Swap``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)">
            <summary>
            指定されたコレクション内の2つの要素を交換します。
            </summary>
            <typeparam name="T">コレクション要素の型。</typeparam>
            <param name="collection">要素を交換するコレクション。</param>
            <param name="index1">交換する要素の1つ目のインデックス。</param>
            <param name="index2">交換する要素の2つ目のインデックス。</param>
        </member>
        <member name="T:MmsCore.Extensions.StringExtensions">
            <summary>
            <see cref="T:System.String" /> クラスの拡張メソッドを提供します。
            </summary>
        </member>
        <member name="M:MmsCore.Extensions.StringExtensions.ToNullIfEmpty(System.String)">
            <summary>
            <see cref="F:System.String.Empty" /> 文字列の場合は null に変換します。
            </summary>
            <param name="self"><see cref="T:System.String" />。</param>
            <returns><paramref name="self" /> が <see cref="F:System.String.Empty" /> 文字列の場合は null。それ以外は <paramref name="self" />。</returns>
        </member>
    </members>
</doc>
